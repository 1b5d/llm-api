name: Publish Docker image

on:
  release:
    types: [published]
  pull_request:
    branches:
      - main
      - 'release/**'

jobs:
  push_to_dockerhub:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: 1b5d/llm-api

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=1b5d/llm-api:latest
          cache-to: type=inline

  push_gpu_to_dockerhub:
    runs-on: ubuntu-latest
    steps:
      - name: Free disk space
        run: |
          sudo apt-get autoremove -y >/dev/null 2>&1
          sudo apt-get autoclean -y >/dev/null 2>&1
          docker rmi $(docker image ls -aq) >/dev/null 2>&1

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta-gpu
        uses: docker/metadata-action@v4
        with:
          images: 1b5d/llm-api
          flavor: | 
            suffix=-gpu,onlatest=true
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.gpu
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64
          tags: ${{ steps.meta-gpu.outputs.tags }}
          labels: ${{ steps.meta-gpu.outputs.labels }}
          cache-from: type=registry,ref=1b5d/llm-api:latest-gpu
          cache-to: type=inline
